SkyEngineSpine.Node=CLASS({preset:()=>{return SkyEngine.Node},init:(n,e,t)=>{let i=t.json,o=t.atlas,a=t.png,s=t.animation,d=t.skin,c=t.mixInfos;void 0===d&&(d="default");let r,f,u;PARALLEL([n=>{GET(i,e=>{f=JSON.parse(e),n()})},n=>{GET(o,e=>{u=e,n()})},()=>{SkyEngine.LoadTexture(a,n=>{if(e.checkIsRemoved()!==!0){let t=new PIXI.spine.core.TextureAtlas(u,(e,t)=>{t(n.baseTexture)}),i=new PIXI.spine.core.AtlasAttachmentLoader(t),o=new PIXI.spine.core.SkeletonJson(i);r=new PIXI.spine.Spine(o.readSkeletonData(f)),r.skeleton.setSkinByName(d),r.state.setAnimation(0,s,!0),void 0!==c&&EACH(c,n=>{r.stateData.setMixByName(n.from,n.to,n.duration)}),r.zIndex=-9999999,r.blendMode=SkyEngine.Util.BlendMode.getPixiBlendMode(e.getBlendMode()),r.state.addListener({event:(n,t)=>{e.fireEvent(t.data.name)},complete:()=>{e.fireEvent("animationend")}}),e.addToPixiContainer(r),e.fireEvent("load")}})}]);e.changeSkin=(n=>{d=n,void 0!==r&&r.skeleton.setSkinByName(d)}),e.changeAnimation=(n=>{s=n,void 0!==r&&(r.state.setAnimation(0,s,!0),r.state.apply(r.skeleton),r.skeleton.updateWorldTransform())}),e.getAnimation=(()=>{return s})}});