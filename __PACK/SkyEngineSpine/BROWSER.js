SkyEngineSpine.Node=CLASS({preset:()=>{return SkyEngine.Node},init:(n,e,t)=>{let i=t.json,o=t.atlas,a=t.png,s=t.animation,d=t.skin,r=t.mixInfos;void 0===d&&(d="default");let c,f,u;PARALLEL([n=>{GET(i,e=>{f=JSON.parse(e),n()})},n=>{GET(o,e=>{u=e,n()})},()=>{if(e.checkIsRemoved()!==!0){let n=new PIXI.spine.core.TextureAtlas(u,(n,e)=>{e(PIXI.BaseTexture.fromImage(a))}),t=new PIXI.spine.core.AtlasAttachmentLoader(n),i=new PIXI.spine.core.SkeletonJson(t);c=new PIXI.spine.Spine(i.readSkeletonData(f)),c.skeleton.setSkinByName(d),c.state.setAnimation(0,s,!0),void 0!==r&&EACH(r,n=>{c.stateData.setMixByName(n.from,n.to,n.duration)}),c.zIndex=-9999999,c.blendMode=SkyEngine.Util.BlendMode.getPixiBlendMode(e.getBlendMode()),c.state.addListener({event:(n,t)=>{e.fireEvent(t.data.name)},complete:()=>{e.fireEvent("animationend")}}),e.addToPixiContainer(c),e.fireEvent("load")}}]);e.changeSkin=(n=>{d=n,void 0!==c&&c.skeleton.setSkinByName(d)}),e.changeAnimation=(n=>{s=n,void 0!==c&&(c.state.setAnimation(0,s,!0),c.state.apply(c.skeleton),c.skeleton.updateWorldTransform())}),e.getAnimation=(()=>{return s})}});