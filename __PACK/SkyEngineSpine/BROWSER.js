SkyEngineSpine.Node=CLASS({preset:()=>{return SkyEngine.Node},init:(n,e,t)=>{let i=t.json,o=t.atlas,a=t.png,d=t.animation,s=t.skin,c=t.mixInfos;void 0===s&&(s="default");let f,r,u,l;PARALLEL([n=>{GET(i,e=>{r=JSON.parse(e),n()})},n=>{GET(o,e=>{u=e,n()})},n=>{l=new Image,l.onload=(()=>{l.onload=void 0,n()}),l.src=a},()=>{if(e.checkIsRemoved()!==!0){let n=new PIXI.spine.core.TextureAtlas(u,(n,e)=>{e(new PIXI.BaseTexture(l))}),t=new PIXI.spine.core.AtlasAttachmentLoader(n),i=new PIXI.spine.core.SkeletonJson(t);f=new PIXI.spine.Spine(i.readSkeletonData(r)),f.skeleton.setSkinByName(s),f.state.setAnimation(0,d,!0),void 0!==c&&EACH(c,n=>{f.stateData.setMixByName(n.from,n.to,n.duration)}),f.zIndex=-9999999,f.blendMode=SkyEngine.Util.BlendMode.getPixiBlendMode(e.getBlendMode()),f.state.addListener({event:(n,t)=>{e.fireEvent(t.data.name)},complete:()=>{e.fireEvent("animationend")}}),e.addToPixiContainer(f),e.fireEvent("load")}}]);e.changeSkin=(n=>{s=n,void 0!==f&&f.skeleton.setSkinByName(s)}),e.changeAnimation=(n=>{d=n,void 0!==f&&(f.state.setAnimation(0,d,!0),f.state.apply(f.skeleton),f.skeleton.updateWorldTransform())}),e.getAnimation=(()=>{return d})}});